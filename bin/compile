#!/bin/bash

indent() {
  sed -u 's/^/       /'
}


echo "-----> Installing Ghostscript"

BUILD_DIR=$1
CACHE_DIR=$2
VENDOR_DIR="$BUILD_DIR/vendor"
INSTALL_DIR="$VENDOR_DIR/ghostscript"

mkdir -p $INSTALL_DIR
mkdir -p $CACHE_DIR

GS_VERSION="9.14"
CACHE_FILE="$CACHE_DIR/ghostscript-$GS_VERSION.tar.gz"

if [ ! -f $CACHE_FILE ]; then
  # install gs
  GS_FILE="ghostscript-$GS_VERSION.tar.gz"
  GS_DIR="ghostscript-$GS_VERSION"
  GS_URL="http://downloads.ghostscript.com/public/old-gs-releases/$GS_FILE"

  echo "-----> Downloading Ghostscript from $GS_URL"
  wget $GS_URL -P $BUILD_DIR | indent

  echo "-----> Extracting Ghostscript from $BUILD_DIR/$GS_FILE"
  if [ ! -f $BUILD_DIR/$GS_FILE ]; then
    echo "Error: Unable to download Ghostscript" | indent
    ls $BUILD_DIR | indent
    exit 1;
  fi
  tar -xzvf $BUILD_DIR/$GS_FILE | indent

  echo "-----> Building Ghostscript"
  cd $GS_DIR

  ./configure --disable-cups --disable-gtk --with-drivers=FILES  --prefix=$INSTALL_DIR
  make
  cd ..
  rm -rf $GS_DIR

  # cache for future deploys
  echo "-----> Caching Ghostscript installation"
  cd $VENDOR_DIR
  REL_INSTALL_DIR="ghostscript"
  tar -zcvf $REL_INSTALL_DIR.tar.gz $REL_INSTALL_DIR
  mv $REL_INSTALL_DIR.tar.gz $CACHE_FILE

else
  # cache exists, extract it
  echo "-----> Extracting Ghostscript $CACHE_FILE => $VENDOR_DIR"
  tar -xzvf $CACHE_FILE -C $VENDOR_DIR
fi


# update PATH
echo "-----> Updating environment variables"
echo "export PATH=INSTALL_DIR/bin:\$PATH"
