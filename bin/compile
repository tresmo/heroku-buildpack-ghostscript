#!/bin/bash

indent() {
  sed -u 's/^/       /'
}

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
VENDOR_DIR="$BUILD_DIR/vendor"
mkdir -p $CACHE_DIR

export_env_dir() {
  whitelist_regex=${2:-''}
  blacklist_regex=${3:-'^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH)$'}
  if [ -d "$ENV_DIR" ]; then
    for e in $(ls $ENV_DIR); do
      echo "$e" | grep -E "$whitelist_regex" | grep -qvE "$blacklist_regex" &&
      export "$e=$(cat $ENV_DIR/$e)"
      :
    done
  fi
}

export_env_dir

GS_INSTALL_VERSION="${GHOSTSCRIPT_VERSION:-9.14}"

echo "-----> Installing Ghostscript $GS_INSTALL_VERSION"
INSTALL_DIR="$VENDOR_DIR/ghostscript"
mkdir -p $INSTALL_DIR


CACHE_FILE="$CACHE_DIR/ghostscript-$GS_INSTALL_VERSION.tar.gz"

if [ ! -f $CACHE_FILE ]; then

  GS_FILE="ghostscript-$GS_INSTALL_VERSION.tar.gz"
  GS_DIR="ghostscript-$GS_INSTALL_VERSION"
  GS_URL="http://downloads.ghostscript.com/public/old-gs-releases/$GS_FILE"

  echo "-----> Downloading Ghostscript from $GS_URL"
  wget $GS_URL -P $BUILD_DIR | indent

  echo "-----> Extracting Ghostscript from $BUILD_DIR/$GS_FILE"
  if [ ! -f $BUILD_DIR/$GS_FILE ]; then
    echo "Error: Unable to download Ghostscript" | indent
    ls $BUILD_DIR | indent
    exit 1;
  fi
  tar -xzf $BUILD_DIR/$GS_FILE | indent

  echo "-----> Building Ghostscript"
  cd $GS_DIR

  ./configure --disable-cups --disable-gtk --with-drivers=FILES  --prefix=$INSTALL_DIR
  make && make install
  cd ..
  rm -rf $GS_DIR

  # cache for future deploys
  echo "-----> Caching Ghostscript installation"
  cd $VENDOR_DIR
  REL_INSTALL_DIR="ghostscript"
  tar -zcf $REL_INSTALL_DIR.tar.gz $REL_INSTALL_DIR
  mv $REL_INSTALL_DIR.tar.gz $CACHE_FILE

else
  # cache exists, extract it
  echo "-----> Extracting Ghostscript $CACHE_FILE => $VENDOR_DIR"
  tar -xzf $CACHE_FILE -C $VENDOR_DIR
fi


# update PATH
echo "-----> Updating environment variables"
PROFILE_PATH="$BUILD_DIR/.profile.d/ghostscript.sh"
mkdir -p $(dirname $PROFILE_PATH)
echo "export PATH=$INSTALL_DIR/bin:\$PATH" >> $PROFILE_PATH
